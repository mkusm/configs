"""VUNDLE""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'christoomey/vim-tmux-navigator'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on           " required
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set history=50		" keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" When editing a file, always jump to the last known cursor position.
" Don't do it when the position is invalid or when inside an event handler
" (happens when dropping a file on gvim).
" Also don't do it when the mark is in the first line, that is the default
" position when opening a file.
autocmd BufReadPost *
  \ if line("'\"") > 1 && line("'\"") <= line("$") |
  \   exe "normal! g`\"" |
  \ endif

" move '~' and '.swp' files
set backupdir=~/.vim/backup//,.
set directory=~/.vim/backup//,.

"""VISUAL""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Less eye-straining colors
hi StatusLine ctermfg=darkgrey
hi VertSplit ctermfg=darkgrey
hi ColorColumn ctermbg=darkgrey

syntax enable                " enable syntax highlighting
let python_highlight_all = 1 " enable all Python syntax highlighting features
set number                   " show line numbers
set cursorline               " show a line under the cursor's current line
set showmatch                " show the matching for [], {} and ()
set colorcolumn=80           " show 80th column

"""INDENTATION"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set autoindent " indent when moving to the next line

autocmd Filetype python setlocal
  \ expandtab
  \ tabstop=4
  \ shiftwidth=4
  \ softtabstop=4

autocmd Filetype html setlocal
  \ expandtab
  \ tabstop=2
  \ shiftwidth=2
  \ softtabstop=2

" set indents after parentheses to one-indent-width
let g:pyindent_open_paren = '&sw'
let g:pyindent_nested_paren = '&sw'
let g:pyindent_continue = '&sw'

"""LEADER""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Set leader
noremap <Space> <Nop>
let mapleader = "\<Space>"

" Go to tab by number
noremap <leader>1 1gt
noremap <leader>2 2gt
noremap <leader>3 3gt
noremap <leader>4 4gt
noremap <leader>5 5gt
noremap <leader>6 6gt
noremap <leader>7 7gt
noremap <leader>8 8gt
noremap <leader>9 9gt
noremap <leader>0 :tablast<cr>

" Go to tabs with h and l
noremap <leader>h gT
noremap <leader>l gt
